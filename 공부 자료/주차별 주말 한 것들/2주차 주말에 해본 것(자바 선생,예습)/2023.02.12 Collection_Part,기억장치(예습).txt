Collection Part

제네릭?
제네릭 타입은 타입을 파라미터로 가지는 클래스와 인터페이스를 말한다.

ArrayList 클래스 구현 시 사용한 타입
<>안에는 보통 저장될 원소의 타입으로 지정이 되어있다.
까지만 학습하다가 ArrayList는 클래스 구성이 어떻게 되어있을까?
의문에 봉착했을 때, 제네릭이라는 개념을 찾게 됨.


<>꺾쇠 안은 아무 문자나 가능 A,B,C,D....소문자도 가능

아예 타입 지정도 안되긴 하는데 타입 지정하라고 경고창 뜸.

예제
main class
Box<String> a = new Box<>();
a.set("안녕하세요");
System.out.println(a.get());

Box<T> class
private T t; 
public T get() { return t; }
public void set(T t){ this.t = t;}







파일 입출력

책 읽고 모르는 용어들은 정리 후 예제는 직접 코딩!


오늘 공부한 내용

문득 컴퓨터 구조를 떠올리다가 개념정리 안되어있어서 정리

컴퓨터 내부 구조(기억장치만 정리)

중앙 처리 장치(CPU)/주 기억 장치/보조 기억 장치

1.중앙 처리 장치(CPU): 컴퓨터의 가장 중요한 부분으로 연산과 제어회로가 포함되어 있다.
기억 연산 제어의 3대 기능을 종합하는 장치

비유적으로 말하면 인간 신체부위 중 뇌에 해당한다.

하위 개념: 코어, 쓰레드, 프로세스


2.주 기억 장치: 주 기억장치는 컴퓨터 내부에서 현재 CPU가 처리하고 있는 내용이 가져와지는 곳
RAM(Random Access Memory) ,ROM(Read Only Memory)이 여기에 해당

3.보조 기억 장치
물리적인 디스크가 연결되어 있는 기억장치
HDD,SSD도 여기의 범주에 해당

Generic: 자료형을 파라미터로 가지는 클래스나 인터페이스
Collection Framework:다수의 데이터를 쉽고 효과적으로 처리할 수 있는 표준화된 방법을 제공하는 클래스의 집합
Stack Memory: 변수가 초기화 될때 할당되는 메모리 공간(or 주소 값이 저장되는 공간)
Heap Memory: 객체가 생성될 때 할당되는 메모리 공간(or 주소 값에 매칭되는 값이 저장되는 공간)
Stack Overflow: 스택 영역에서 할당된 메모리가 초과되어 힙 영역을 침범했을 때 생기는 현상
Heap Overflow: 힙 영역에서 할당된 메모리가 초과되어 스택 영역을 침범했을 때 생기는 현상