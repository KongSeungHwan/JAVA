메모리 영역 나누는 기준

기존에는 코드영역(hex파일,bin파일 메모리?),데이터영역(전역변수,정적변수(static),배열(array),구조체((structure)),
힙영역(동적 데이터 영역), 
스택영역(지역변수 매개변수,리턴 값등 잠시 사용되었다가 사라지는 데이터를 저장) 

이렇게 4가지로 분류되는데,(왼쪽으로 갈수록 높은 주소)


자바에서는 메소드 영역(클래스,클래스 변수), 힙영역(객체 인스턴스),스택 영역(메소드 ,지역변수, 매개변수)으로 나뉨
(왼쪽으로 갈수록 높은 주소)

메인 메소드는 static으로 선언 되어있으므로 일시적으로 저장이되는 힙 스택이 아니기에 계속 남아있고,
변수나 함수는 일시적으로 생성되었다가 수정되거나 없어지기도 함.



Scanner나 BufferedReader사용시 반드시 자원을 반납하는 메소드를 사용해야 함.(자원 효율)
객체이름.close();


Application Program Interface
API



멤버변수
지역
매개변수
참조변수
static













클래스

필드

생성자(메소드의 일종)

생성자는 객체를 반환하는 메소드인 것이다.

메소드

매개변수

 >>
class Car{

Car(int a, int b); //이건 인터페이스다. 매개변수는 여기서 a,b이다.

}
Car c = new Car(12,34);
12,34는 리터럴이지 매개변수는 아님?

int a= 4;



static은 객체 따로 생성 안해도 됨
메인 메소드 또한 마찬가지




접근 제어자

private
private이 포함된 클래스 내부에서만 접근 가능

public
 모든 영역에서 접근 가능(다른 패키지까지)

default
같은 패키지 내에서만 접근 가능

protected
같은 패키지 내부나 상속 관계에 있을 경우 접근 가능




재귀 함수(Recursive Function)



ex)피보나치 수열 구현


피보나치 수열
a(n-2) + a(n-1) = a(n) 인 수열

int a(int t){
	if(t <= 1){
		return t;
	}
	return a(t-2)+a(t-1);
}

팩토리얼 구현(!)
int a(int t){
	if(t==1) return 1;
	return t*a(t-1);
}




객체지향 프로그램 (OOP)

Getter/Setter
객체 외부에서 직접적으로 접근하는 것을 막는 기능의 메소드

객체 데이터 외부에서 값을 변경시 무결성이 깨질수 있음.

중복된 값이 생길 우려가 있다.(동시 수정시)
(데이터 무결성) >>데베에서 많이 나옴


참조형(Reference Type) 변수
기본형 8가지를 제외한 나머지 타입

논리형
boolean
문자형
String char
정수형
byte int long
실수형
double float



참조형은 주소값을 저장하는 변수를 의미

.equals() >>Object(최상위 객체)의 메소드 >>문자열 비교시 사용하는 메소드
.indexOf() >> 해당 문자열의 인덱스 추출








자료구조 중 배열

배열

배열의 인덱스는 0부터 시작한다.
배열 = { 배열[0],배열[1]...       }
여기서 인덱스란 0,1...이라 표기된 것.
인덱스를 벗어나면 NullPointer error

Stack Overflow error 는 값을 배열이나,변수에 값을 저장시에 값이 초과되는 경우 발생 





System 클래스(출력문의 System.out.println의 System)
arraycopy()


copyOf()


배열의 복사

얕은 복사
주소값만 복사하여
본배열을 수정시 복사배열또한 값이 같이 바뀌게 된다.

깊은 복사
얕은 복사와 반대로 본배열이나 복사배열 값을 수정시 각각 수정되게 된다.


Object 클래스 (모든 클래스는 Object 클래스의 하위 클래스이기 때문에 임의의 클래스도 사용 가능하다.)
clone()



자료구조(줫나 어려움)

배열을 기반으로 만들어진 것들
배열이 자원반환이 진짜 낭비가 심하여 자료구조가 나오게 됨.

선형 
ArrayList

주요 메소드
add(E)
size()
get(index)
remove(index)
isEmpty(index)



LinkedList (노드 간 연결, 연결 모양이 선형)


비선형

노드 사용

트리, 그래프




Syntax

(자료형)[] (배열이름);
(자료형) (배열이름)[];

선언 생성 동시에

명칭
배열 ={요소,요소...}


배열 길이>> 배열이름.length(배열길이 입력시 가변적으로 사용가능)
예를 들어 for문의 조건식의 초기화식의 변수의 범위를 정할 시 length를 이용하여 가변적으로 설정가능


(자료형) (배열이름)[] = new int[배열길이(변수로도 가능(입력 값에 용이))];

배열또한 객체 취급이기에 new 키워드를 쓴다.


배열길이를 입력(scanner,bufferedReader)으로 받는 경우 사용 가능

배열이름 = new 타입[배열길이];

향상된 for문(Enhanced for)

가독성이 좋음. (일반 for문은 초기화식,조건식,증감식 등 길어서 향상된 for문보다 가독성이 떨어짐)

대신 인덱스가 없고, 고로 값을 수정 불가능

for문과 같이 이용하여 값에 접근하거나 초기화 가능

Syntax
ex)
int array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
		
		for(int i : array)
		{
			System.out.print(i);
		}
위의 결과 값은 12345678910 이다.




배열 객체의 길이를 구하는 필드





for문 구조

for(ⓐ초기화식;ⓑ조건식;ⓒ증감식){
	
}
ⓐ
ⓑ
ⓒ단항 연산자인++,-- 이외에도 이항 연산자 +=도 활용가능

실행 순서
ⓐ,ⓑ,ⓒ,중괄호



Wrapper Class:기본형을 객체로 사용하기위한 클래스
그냥 기본형의 풀네임으로 쓰고, 앞글자는 대문자로 쓰면 된다.

한글도 변수 설정가능하다?


ArrayList 객체 메소드

add(E) 요소 추가
add(index,E) index 위치에 E를 요소로 집어넣는다.
get(index) 해당 index의 요소를 리턴
set(index,value) 해당 index 위치의 값을 변경한다.
remove(index or E)
나머지는 document 참고























다음시간
equals,contains함수






다차원 배열

int array[2][];
array[0]=new int[1];
array[1]=new int[3];
array[2]=new int[5];

//각각 초기화를 해줘야 접근 가능 하지 않으면 nullPointer error 뜸
//왜냐하면 일종에 배열도 객체이므로 객체를 생성하지 않으면 없는 객체를 불러오는 것이 되므로 nullPointer error가 뜸


행이 2인 2차원 배열 열은 직접 입력하여 초기화 해야함.

>>행이 가변적일 수 있는 경우 사용(열은 가변적으로 사용 불가 앞의 행부터 쳐야 열을 입력가능)
[행][열]
행 가로를 기준으로 셀때
열 세로를 기준으로 셀때

ex)
int array[][2];(x)
int array[1][2];(o)



2차원 배열
{배열요소[0][0], 배열요소[0][1], ...},

{배열요소[1][0], 배열요소[1][1], ...},

{배열요소[2][0], 배열요소[2][1], ...},



Singleton(싱글톤)
객체의 인스턴스가 1개만 만들어지도록 하는 디자인 패턴

static에 생성된 객체는 변수와 동일하게 따로 만드는 new 키워드를 쓸 필요가 없다.
객체도 변수에 저장될 수 있다.

static




추상 클래스 

하위클래스마다의 기능차이 또는 동작차이를 구현하기 위해 만든 클래스

추상클래스에는 구현된 메소드 또는 미구현된 추상 메소드가 있다.

abstract << 키워드


템플릿 메소드

어떠한 절차를 시나리오에 맞게 구현하기 위하여 메소드를 모은 메소드

중간에 추상 메소드가 껴있을 수도 있다.

final <<상수 키워드와 동일!



용어

HEX: ASCII 텍스트 형식으로 이진 정보를 전달하는 파일 형식
BIN:  컴퓨터가 이해 할 수 있는 텍스트 파일, 컴파일러가 java확장자 파일을 컴파일 해준 파일들이 모인 폴더


>>그러면 개발자가 코드로 치고 나서 컴파일러에 들어가 컴퓨터 언어로 바뀌고 어셈블리 언어로 또 바뀐
Wrapper Class:기본형을 객체로 사용하기위한 클래스
파싱(Parsing):파싱(parsing)은 구문 분석이라고 한다.
자바에서는 다른 연동 툴의 개발자가 변수를 잘못 설계하였을 가능성에 대비하여 
ex)
DB            JAVA     툴
Boolean -> String    데이터
true    ->   "true"

OS 상식

페이징 기법의
외부 단편화와 내부 단편화

페이징 기법: 프로세스를 일정한 크기 페이지로 잘라 메모리에 적재하는 방식을 페이징 기법이라고 한다.

내부 단편화:
프로세스를 고정된 크기로 잘랐을 때, 메모리공간에 남는 공간이 있는경우 내부 단편화 현상이라고 한다.

외부 단편화:
일정 크기의 프로세스를 바로 적재할 경우 남는 공간이 있을 경우를 외부 단편화 현상이라고 한다.

CPU Scheduler

비선점 스케쥴링

FCFS

SJF


선점 스케쥴링

Priority (우선순위 스케쥴링)

RR(라운드로빈 스케쥴링)




질문거리

메모리영역을 나누는 기준에서 힙 영역 스택 영역은 동일한데, 둘다 동일한 영역인가?
아니면 이름만 같을 뿐 다른영역을 할당한 것인가? 
보통은 동일한 영역이나, 사람마다 기준이 일부 다를수는 있다.


논외 질문

앞으로의 프로젝트에서 배열이 쓰일 일이 있나? 
이미 자료를 저장하는 데이터 베이스가 있는데 굳이 배열이라는 자료구조를 쓰는 경우는 언제인가?
배열은 자원낭비가 심한데..(프로젝트 경험x) 상황에 따라 다름.



그러면 배열에 var 타입의 변수를 집어넣을시 어떤가..? 에러남 타입 자체를 못 씀.(직접 해봄.)
다른 방법이 없나? 자바에서 방법이 없음.
{int타입,String 타입....}
var>> 넣는 값에 따라 달라지는 자료형, 약간 추상 메소드,추상 클래스와 같다. 추상 변수?
jsp에서는 그냥 선언하면 아무 변수나 되는구먼..


c에서는 선언하고 초기화 안하고 호출하면 쓰레기값( ex 321rfdwe5234)이 나오는데 
자바는 int나 double이 0값으로 나오는데 이건 자바만의 자동화 기능인가?

for문 조건식또한 if문 처럼 && 연산자 포함하여 범위를 정해줘도 되는가?

1이상은 true 0,-1은 false로 취급가능한가? 자바에서?


메인메소드에서 디버깅할수 없을 때 어찌해야하는가?