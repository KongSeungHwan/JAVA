함수의 종류


접두어 종류

BI 파라미터가 2개

TO 리턴 값이 2개



Consumer 입력 o 출력 x

accept


Supplier 입력 x 출력o
 
get


Function 입력 o 출력 o

apply


Operator              extends Function



Predicate




stream 연산

PipeLine

스트림생성 >> 중간연산 >> 최종연산

중간연산 요소
peek() 중간에서 출력        중간연산 ver forEach
skip(a) a만큼 원소를 건너뛴다.
limit(a) 원소 개수를 a로 제한한다.
filter(조건) 해당 조건이 true인 원소만 리턴
map(메소드 또는 리턴하는 자료구조의 원소와 자료형이 같은 값) 해당 메소드의 리턴 값을 원소로 넘겨주는 형태의 중간연산
parallel() 원소들을 인덱스 앞부터 순차적으로 연산하는 것이 아닌 한번에 연산하는 형태(Thread)(reduce만 써봄)
최종연산

lazy 연산? >>누적 후 연산처리
forEach(연산)
count() 원소들의 개수를 세서 int 값으로 리턴
average() 원소들의 평균 리턴 (int? double?)
sum() 원소들의 합을 리턴 (숫자 값말고 문자열도 가능한가?)
max(),min() 최대/최소 값
collect(ⓐ) ⓐ에 해당하는 자료구조 형식으로 리턴
Eager 연산 >> 즉시 처리
reduce(ⓐ) 앞의 원소부터 뒤의 원소까지 순차적으로 ⓐ연산



Collections.unmodifiableList(List 자료구조)
List를 Constant pool에 할당되어 읽기 밖에 안된다.(Read Only)(CRUD 불가)


파일 입출력 stream과 불러온 값을 연산하는 stream(지금 배우는 stream 연산)은 따로 관리 해야한다.

오늘 어려워했던 중간연산 or 최종연산
toMap()  >>파라미터 2개의 경우 앞 연산에서 받아온 원소들을 가지고 (Function,Function) 형식으로 집어넣어야한다.
만일 중복 키 값이 들어오게 된다면 IllegalStateFunction이 발생하게 된다.
파라미터 3개일 경우 (Function, Function,BinaryFunction) 3번째 인자는 만일 동일 키의 값이 들어오게 된다면
해당 키에 대해 어떻게 처리할 것인가? 인자는(기존에 있던 값,새로 들어온 값)
