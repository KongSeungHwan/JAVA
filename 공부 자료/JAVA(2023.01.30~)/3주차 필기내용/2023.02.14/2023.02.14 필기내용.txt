Collection



Collection 전용 제네릭 메소드 static

Collections.sort(자료구조명,제네릭 메소드(Collections.reverseOrder(),Collections.Order()))
자료구조의 원소를 정렬함.(ㄱ,ㄴ,ㄷ...)
역순도 있다.(제네릭 메소드 reverseOrder 사용)


Arrays.asList(1,2,3,4) 생성자 파라미터란에 넣으면
1,2,3,4를 원소로 넣는다.


toArray(제네릭타입 배열) 어떤 list가 와도 복사가 된다(깊은 복사)
원소가 같은 자료형이기만 하면 가능

기존 자료구조의 원소개수에서 초과하면 null값으로 뜬다.


add(원소 값) 원소를 추가하는 메소드


get(인덱스 값) 해당 인덱스의 값을 리턴


set(인덱스 값, 값) 해당 인덱스의 값을 초기화


size() 원소의 개수 즉, list의 길이

isEmpty() >> 자료구조가 비어있는지 여부를 true/false로 리턴

remove(인덱스 값) 인덱스를 안치면 0번째 원소 제거





Interface



①List 
순서 o
중복 o
ArrayList,LinkedList,Vector >>선형 자료구조


제네릭 메소드 static

Arrays.asList(1,2,3,4) 생성자 파라미터란에 넣으면
1,2,3,4를 원소로 넣는다.


toArray(제네릭타입 배열) 어떤 list가 와도 복사가 된다(깊은 복사)
원소가 같은 자료형이기만 하면 가능

기존 자료구조의 원소개수에서 초과하면 null값으로 뜬다.


add(원소 값) 원소를 추가하는 메소드


get(인덱스 값) 해당 인덱스의 값을 리턴


set(인덱스 값, 값) 해당 인덱스의 값을 초기화


size() 원소의 개수 즉, list의 길이

isEmpty() >> 자료구조가 비어있는지 여부를 true/false로 리턴

remove(인덱스 값) 인덱스를 안치면 0번째 원소 제거

indexOf(값) 해당 값의 인덱스 값을 리턴

lastIndexOf(값) 





LinkedList만 해당하는 메소드(인터페이스 List 상속x)


처음 노드가 head 그 다음부터 link 가지고 있는 노드..마지막 노드가 Tail


getFirst() 첫번째 원소 리턴

getLast() 마지막 원소 리턴

poll() 맨 앞 값이 리턴 되면서 빼기(인덱스가 앞으로 땡겨짐)

pollLast() 맨 뒤의 값이 리턴되면서 빼기


clear() 자료구조의 원소를 모두 없앰




Vector만 해당하는 메소드(인터페이스 List 상속x)

addElement(값) add랑 기능이 똑같은데..

elemementAt(index):해당 인덱스의 값을 리턴

capacity() 자료구조의 용량(원소가 가득차고 더 넣을라하면 Overflow일어남)
구조상 원소를 넣을때마다 늘어나는 형태 vector

get안씀 elementAt(index 값) 해당 인덱스의 값을 리턴







+)
contains("ⓐ") ⓐ가 포함되어있는지의 여부를 true/false로 리턴함

Iterator(자료구조를 순차적으로 읽는 객체)

Iterator<자료구조 원소의 자료형> = new 자료구조명.iterator();






②Set
순서x
중복x

HashSet

key값을 Hash Function에 넣어서 해당 주소를 찾아 값에 접근하는 방식의 자료구조
(일일히 hashCode를 칠 번거로움이 없다.)

중복 없는 자료구조 다룰 시 유리, 단지 순서 없음(중복 값 집어 넣으면 알아서 삭제)

안쓰여있는 것은 List 인터페이스와 동일

add

size

remove(값) 얘는 값 자체로만 가능 인덱스로 불가

contains  indexOf는 없으니 값 자체만으로만 검색가능




Object.equals(Object): Object간의 주소를 비교하여 주소를 비교했을때 같은지 boolean값으로 리턴
String은 이걸 오버로딩해서 사용함.


LinkedHashSet

다만 HashSet과 차이점은 순서가 있는 HashSet이다.





TreeSet >> 비선형 자료구조(그래프도 있음)

Tree는 노드와 노드 연결 선들이 순환구조를 이루지 않는 것을 Tree라고 한다.


이진트리 탐색 3가지

전위 순회
중간노드, 왼쪽노드, 오른쪽 노드
중위 순회
왼쪽 노드, 중간 노드, 오른쪽 노드
후위 순회
왼쪽 노드, 오른쪽 노드, 중간 노드

이진 트리 탐색 방식(3가지)

                             1
              2                               3
       4                5               6               7
8           9      10       11   12      13     14      15



노드 값의 차이를 -,0,+,값의 차이로 판단해서 오름차순,내림차순으로 정렬하여 탐색하는 방식






역순으로 할라면 리턴되는 값에 -1을 곱해주면 반대로 된다.

다만 이게 출력속도가 빨라서 이런 복잡한 방식으로 연구한다고 보면 된다.



TreeSet

메소드가 List랑 똑같네?


③Map
순서x
key값만 중복x


이미 배운내용이라 네트워크 공부함.



Iterator(자료구조의 원소를 저장하여 순차적으로 나열할때 사용하는 객체)

Map도 나열 가능 key값 나열, key에 해당하는 값도 나열가능(본래 key가지고 접근함. 순서x)




용어
OS(Operating System):사용자가 컴퓨터를 편리하게 사용하기 위해 만들어진 소프트웨어
Open Source Software: 누구나 사용할 수 있는 코드
IDE(Integrated Deveopment Environment):통합 개발 환경

상용 소프트웨어(commercial software): (=페이웨어(payware)) 
상업적 목적으로나, 판매를 목적으로 생산되는 컴퓨터 소프트웨어

범용 소프트웨어:범용 패키지 프로그램은 다수의 사용자가 
일반적으로 사용하는 프로그램 입니다. 예를 들면 MS, 워드, 포토샵, 게임, 엑셀 등

OSS(Open Source Software):모두가 사용가능한 코드를 이야기하는 것, 범용

컴퓨터의 Memory: 기억장치 중 RAM(Random Access Memory)에 해당하는 공간

Driver: 운영 체제와 디바이스가 서로 통신할 수 있는 소프트웨어 구성 요소
더미 모듈이라고 불림(상향식 통합 테스트)

Stub: 하향식 통합 테스트에서 종속 모듈을 대체하는 모듈

블랙박스 테스트: 모듈의 내부구조를 공개하지 않은 채로 테스트하는 기법
화이트박스 테스트: 모듈의 내부구조를 공개한채로 세밀하게 테스트하는 기법

Hash Code: 객체를 식별하는 하나의 정수값(암호화하는 하나의 방법이라고 생각하면 편하다.)
(주소값과 다른 값이며, 저장공간은 인덱스,주소값, 해시 코드 전부 다른 공간에 저장)

동기화:시스템을 동시에 작동시키기 위해 여러 사건들을 조화시키는 것을 의미

네트워크 영역

ICMP: 인터넷 프로토콜의 비신뢰적인 특성을 보완하기 위한 프로토콜(네트워크 분야)

Zombie PC:악성코드에 감염된 컴퓨터를 의미하고 bot(봇)이라고 부른다.

Bot Net:bot으로만 이루어진 네트워크 망을 의미

Zero Day Attack:아직 알려지지 않은 해킹기술로 공격하는 것

Bruth Force Attack:무차별 대입 공격 여러 가능성의 키 값을 무차별로 대입하는 공격

Land Attack: 한 ip 지점에 ack를 다수를 보내서 버퍼오버플로우를 유도 시켜서 서비스 중지를 일으키는 해킹 공격

IP Snooping : 패킷을 몰래 까보는 것을 의미한다. 패킷 안에 있는 클라이언트의 개인정보를 몰래 훔쳐보는 행위

IP Spoofing: IP나 DNS 주소를 위조하여 위조한 문서를 보내 클라이언트 컴퓨터의 권한이나 개인정보를 빼내는 공격**

Watering Hole: 클라이언트 컴퓨터가 자주가는 사이트를 파악 후 몰래 그 웹사이트를 감염시킨 후 클라이언트가 들어오면
악성코드를 심는 행위

Smurfing:희생자의 스푸핑된 원본 IP를 가진 수많은 인터넷 제어 메시지 프로토콜 패킷들이 
IP 브로드캐스트 주소를 사용하여 컴퓨터 네트워크로 브로드캐스트하는 분산 서비스 거부 공격