상속(Inheritance)

Keyword extends



상속이라는 개념은 부모클래스에서 자식클래스로 필드와 메소드를 '상속'시킨다 라고 한다.
부모 클래스가 상위 클래스 자식클래스가 하위 클래스이다.

또한 메소드 같은 경우에는 오버로딩과 비슷하게 오버라이딩을 할 수 있다.

오버라이딩: 부모클래스에서 상속받은 메소드를 재정의 하는 기능을 의미한다.(같은 이름의 메소드를 상속 받아 재정의)

오버로딩과의 차이: 오버로딩은 같은 클래스 내에서 동일한 이름의 메소드를 달리 사용하는 기능이다.
		(오버로딩은 같은 클래스 범위 내에서 이루어지는 기능
		오버라이딩은 부모클래스와 자식클래스가 존재 해야만 성립한다.)

class A extends B{
~~~~
}


접근 제한자

public
모든 영역에서 접근 가능한 범위
private
같은 클래스 범위에서 접근 가능한 범위
default
같은 패키지 내에서 접근 가능한 범위
protected
같은 패키지 내이거나 상속 관계가 있을 때 접근 가능하다.(다른 패키지이더라도 상속관계만 있다면 접근 가능


이런 식으로 구성하며 의미는 클래스 A는 클래스 B에 상속 받았다 즉, B는 A의 부모/상위 클래스이다.

A는 B의 자식/하위 클래스이다.

또한 상식으로 Object 클래스(최상위 클래스)라는 것이 있는데 이 클래스는 모든 클래스에게 상속을 해주는, 
즉, 모든 클래스의 부모/상위 클래스이다.

ex) 

Object.equals() 함수

equals() 함수
(얘는 확실히 오버라이딩한 것이라고 생각함. 참조형을 비교하냐,기본형 값을 비교하냐 그 차이로 갈린다.)
toString() 함수
clone()함수

keyword

this(현재 있는 클래스를 뜻함), super(부모 클래스를 뜻함)

super(); >>부모클래스를 호출하겠다.

this();>>현재 있는 클래스를 호출하겠다.



추상 클래스

추상클래스라고 함은 구현되지 않은 메소드 즉, 추상메소드를 포함하는 클래스를 추상 클래스라고 한다.





부모클래스명 참조변수명 = new  자식클래스생성자메소드(); >>이건 성립 된다.




(반대는 syntax error)(성립x) >> 말이 안되는 게 맞는게 반대도 성립한다면, 부모가 언제든지 자식이 될 수 있다는 말과 같음.(error나는게 맞음.)

캐스팅은 일단 syntax error는 나지 않으나  콘솔에 에러창으로 캐스팅 불가능 하다 나온다.

근데 캐스팅은 상속이고 뭐고 없이 그냥 다른 클래스A 대 클래스B 일때 클래스 A의 객체를 B클래스의 객체처럼 쓰고 싶을때 하는 것인데..

double a = 10.0; 
System.out.printf("%d",(int)a);

이런식으로 사용하는데 double과 int는 상속이고 나발이고 그냥 다른 자료형이다.

근데 숫자 범위 상  실수는 정수를 내포할텐데.. 왜 int는 double의 자식클래스가 아닐까(추상화 개념으로 이해를 하면 안되는건가..)
실수>정수(자연수,음수,0)>자연수 숫자 범위 관계가 이렇게 될 텐데 (시스템 상 만들어졌다 치자.)



ex)
개는 동물의 일종이다 참
동물은 개의 일종이다 거짓

이런 논리랑 같음



부모 클래스 선언 후 자식 클래스로 생성을 하게 되는 경우, 다음의 제한을 받게 된다.

*****부모 클래스의 필드나 메소드, 추가로 오버라이딩한 메소드까지는 사용가능 한데 나머지 따로 생성한 메소드는 사용 불가.





질문거리
1.왜 접근 제한자 범위는 부모 클래스 <= 자식클래스 인가? 왜 범위가 상속 받을 때 범위가 줄어드는 게 아닌 늘어나야 하는 건가?
Answer 규칙이다.  부모 클래스에서 자식클래스까지 계속 상속관계를 유지하며 호출해야 하는데 만약 자식 클래스에서 private같이
범위가 작은 접근 제한자로 제한 해버리면 상속관계가 끊어지면서 메소드를 불러올 수 없는 오류가 생긴다.(그러므로 범위가 넓어져야한다.)


2.super 키워드가 바로 상위 클래스를 호출하는 키워드인데 그러면 그 부모의 부모 클래스의 메소드를 불러오려면 어떻게 해야할까?
super.super(Syntax error)를 쓸 상황이면 그냥 그 메소드가 있는 클래스의 객체를 생성해라.


좋은 코딩이다라는 조건은 연산횟수,초기화 횟수로만 따지면 좋은 프로그램인가?
answer 아니다. 측면에 따라 다름.(가독성,접근성 등등)

