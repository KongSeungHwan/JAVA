Javascript 
웹 페이지에서 복잡한 기능을 구현할 수 있도록 하는 스크립팅 언어 또는 프로그래밍 언어

내장객체(Built in Object)
기본적으로 객체 생성 없이 메소드 호출가능함


scope
변수 참조 가능 범위
ver.java
{~~~~}

중괄호 범위(지역변수)


scope

Function-Level-Scope

함수 범위 내에서 유효한 범위

Block-Level-Scope

if,for문,while문,try/catch문의 중괄호 범위 내에서 유효한 범위


domain 값의 범위
ex)
int, String
숫자,문자열 형태의 범위

문자열 (비교연산자) 문자열 
형태 시 둘의 각 자리의 아스키 코드 값으로 비교하여 boolean 값을 리턴하게 된다.

변수 호이스팅

코드 순서 상 변수가 뒤에 선언 할당이 이루어져 있더라도 해당 변수를 앞에서 사용할 수 있는 기능 


var 자바와는 다르게 유동적으로 자료형이 할당되며 재선언 무시이며 재할당 가능

let 재선언 불가/재할당 가능

const 재선언 불가/재할당 가능

undefined vs null

undefined는 값은 할당했으나 자료형이 선언되지 않았을 경우 지정되는 자료형

null은 값 자체가 없는 빈 객체를 말하는 값


document 객체 메소드

write 문서에 인자로 온 문자열을 추가하여 작성하는 메소드

getElement(s) id,class로 해당 속성의 데이터를 받는다. 리턴 값은 문자열이거나 NodeList

innerHTML 줄당 item메소드로 접근 가능하며 인덱스는 줄 순서로 이루어져있다.



window 객체 메소드

alert 팝업창 리턴 값x

prompt 팝업창에서 입력값을 받음 메소드 리턴 값은 입력 받은 값

confirm 팝업창으로 예(true)/아니오(false)로 받아 boolean 타입으로 리턴



제어문

조건문
if

if~else if~else

switch~case문
반복문

for 
(in,of)

for(변수 of 자료구조) >>자료구조 안에 있는 원소가 변수에 초기화 되면서 for문이 실행

for(변수 in 자료구조) >> 인덱스 처음부터 변수에 초기화되면서 for문이 실행

while

do~while

syntax는 java와 동일하나 다른 점이 있다면 
향상된 for문은 in이나 of 키워드를 이용하여 사용한다.

    
함수형 프로그래밍답게 stream연산도 상당히 줄인것이 보인다.
stream() 메소드 호출x


shift/unshift(큐의 메소드와 같다.)
unshift() 
**unshift(value) value를 가진 원소가 push된다. 기존 자리는 undefined 원소로 된다.(오버로딩)
shift() 첫번째 원소 제거 후 제거 요소 반환

push/pop stack method 고대로 씀



















용어 정리
script language
응용 소프트웨어를 제어하는 컴퓨터 프로그래밍 언어

호이스팅(hoisting):
인터프리터가 변수와 함수의 메모리 공간을 선언 전에 미리 할당하는 것을 의미

JIT(Just In Time) 컴파일==동적 번역(dynamic translation)
실제 실행하는 시점에 기계어로 번역하는 컴파일 기법

Call back 함수
다른 코드의 인수로서 넘겨주는 실행 가능한 코드

ECMA Script
기술 규격에 따라 정의하고 있는 표준화된 스크립트 프로그래밍 언어

명령형 프로그래밍
"어떻게" 할당할 것인가에 중점을 둔 프로그래밍

선언형 프로그래밍
"무엇을" 할당할 것인가에 중점을 둔 프로그래밍

NaN: Not a Number
